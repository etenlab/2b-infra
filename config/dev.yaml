# AWS env settings
awsAccountId: '579742570368'
awsRegion: 'us-east-2'

# Prefix used to identify app CloudFormation component
appPrefix: 'cb'

# VPC configuration
vpcCidr: '10.0.0.0/16'
natGatewaysCount: 0

# Env domain setup
rootDomainName: 'crowd.bible'
createEnvHostedZone: true # set to "true" if you want to create envDomainName, i.e."dev.crowd.bible"
envDomainName: 'dev.crowd.bible' # must be present if createEnvHostedZone equals "true"

# App ECS cluster name
ecsClusterName: 'dev-cluster'

# System Manager params to create
vpcSsmParam: '/dev/app-vpc-id'
defaultEcsExecRoleSsmParam: '/dev/ecs-default-execution-role'
defaultEcsTaskRoleSsmParam: '/dev/ecs-default-task-role'
albArnSsmParam: '/dev/alb-arn'
albSecurityGroupSsmParam: '/dev/alb-sg-id'
dbSecurityGroupSsmParam: '/dev/db-sg-id'
domainCertSsmParam: '/dev/root-domain-certificate'

# Secrets Manager params to create
dbCredentialSecret: 'dev/db/credentials'

# Whether database is accessible outside of VPC
dbPublicAccess: true

# Config for frontend showcase app
showcaseApp:
  domainName: 'showcase.dev.crowd.bible'

# Config for database API app
databaseApi:
  dockerPort: 8101
  albPort: 3001
  subdomain: 'db'
  serviceName: 'databaseApi'
  dockerImageUrl: 'etenlab/database-api'
  cpu: 512
  memory: 1024
  taskCount: 1
  priority: 10
  environment:
    - PORT: 8101
    - RUN_MIGRATIONS: false

# Config for admin API app
adminApi:
  dockerPort: 8101
  albPort: 3002
  subdomain: 'admin'
  serviceName: 'adminApi'
  dockerImageUrl: 'etenlab/admin-api'
  cpu: 512
  memory: 1024
  taskCount: 2
  priority: 20
  environment:
    - PORT: 8101
    - RUN_MIGRATIONS: false
